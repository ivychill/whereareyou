// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/trackevent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace luyun {
namespace whereareyou {
namespace shared {

namespace {

const ::google::protobuf::Descriptor* TrackEvent_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrackEvent_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TrackEvent_EventType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2ftrackevent_2eproto() {
  protobuf_AddDesc_proto_2ftrackevent_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/trackevent.proto");
  GOOGLE_CHECK(file != NULL);
  TrackEvent_descriptor_ = file->message_type(0);
  static const int TrackEvent_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackEvent, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackEvent, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackEvent, tracker_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackEvent, tracker_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackEvent, tracker_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackEvent, trackee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackEvent, trackee_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackEvent, trackee_y_),
  };
  TrackEvent_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrackEvent_descriptor_,
      TrackEvent::default_instance_,
      TrackEvent_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackEvent, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrackEvent, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrackEvent));
  TrackEvent_EventType_descriptor_ = TrackEvent_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2ftrackevent_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrackEvent_descriptor_, &TrackEvent::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2ftrackevent_2eproto() {
  delete TrackEvent::default_instance_;
  delete TrackEvent_reflection_;
}

void protobuf_AddDesc_proto_2ftrackevent_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026proto/trackevent.proto\022\034com.luyun.wher"
    "eareyou.shared\"\220\003\n\nTrackEvent\022T\n\004type\030\001 "
    "\002(\01622.com.luyun.whereareyou.shared.Track"
    "Event.EventType:\022START_TRACKING_REQ\022\n\n\002i"
    "d\030\002 \001(\005\022\017\n\007tracker\030\003 \001(\t\022\021\n\ttracker_x\030\004 "
    "\001(\t\022\021\n\ttracker_y\030\005 \001(\t\022\017\n\007trackee\030\006 \001(\t\022"
    "\021\n\ttrackee_x\030\007 \001(\t\022\021\n\ttrackee_y\030\010 \001(\t\"\261\001"
    "\n\tEventType\022\026\n\022START_TRACKING_REQ\020x\022\027\n\022S"
    "TART_TRACKING_REP\020\322\001\022\021\n\014SEND_LOC_REQ\020\300\002\022"
    "\021\n\014SEND_LOC_REP\020\346\001\022\024\n\017QUERY_BY_ID_REQ\020\301\002"
    "\022\024\n\017QUERY_BY_ID_REP\020\347\001\022\020\n\013FWD_LOC_REQ\020\323\001"
    "\022\017\n\013FWD_LOC_REP\020yB0\n\034com.luyun.wherearey"
    "ou.sharedB\020TrackEventProtos", 507);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/trackevent.proto", &protobuf_RegisterTypes);
  TrackEvent::default_instance_ = new TrackEvent();
  TrackEvent::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2ftrackevent_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2ftrackevent_2eproto {
  StaticDescriptorInitializer_proto_2ftrackevent_2eproto() {
    protobuf_AddDesc_proto_2ftrackevent_2eproto();
  }
} static_descriptor_initializer_proto_2ftrackevent_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* TrackEvent_EventType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrackEvent_EventType_descriptor_;
}
bool TrackEvent_EventType_IsValid(int value) {
  switch(value) {
    case 120:
    case 121:
    case 210:
    case 211:
    case 230:
    case 231:
    case 320:
    case 321:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const TrackEvent_EventType TrackEvent::START_TRACKING_REQ;
const TrackEvent_EventType TrackEvent::START_TRACKING_REP;
const TrackEvent_EventType TrackEvent::SEND_LOC_REQ;
const TrackEvent_EventType TrackEvent::SEND_LOC_REP;
const TrackEvent_EventType TrackEvent::QUERY_BY_ID_REQ;
const TrackEvent_EventType TrackEvent::QUERY_BY_ID_REP;
const TrackEvent_EventType TrackEvent::FWD_LOC_REQ;
const TrackEvent_EventType TrackEvent::FWD_LOC_REP;
const TrackEvent_EventType TrackEvent::EventType_MIN;
const TrackEvent_EventType TrackEvent::EventType_MAX;
const int TrackEvent::EventType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int TrackEvent::kTypeFieldNumber;
const int TrackEvent::kIdFieldNumber;
const int TrackEvent::kTrackerFieldNumber;
const int TrackEvent::kTrackerXFieldNumber;
const int TrackEvent::kTrackerYFieldNumber;
const int TrackEvent::kTrackeeFieldNumber;
const int TrackEvent::kTrackeeXFieldNumber;
const int TrackEvent::kTrackeeYFieldNumber;
#endif  // !_MSC_VER

TrackEvent::TrackEvent()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrackEvent::InitAsDefaultInstance() {
}

TrackEvent::TrackEvent(const TrackEvent& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrackEvent::SharedCtor() {
  _cached_size_ = 0;
  type_ = 120;
  id_ = 0;
  tracker_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  tracker_x_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  tracker_y_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  trackee_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  trackee_x_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  trackee_y_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrackEvent::~TrackEvent() {
  SharedDtor();
}

void TrackEvent::SharedDtor() {
  if (tracker_ != &::google::protobuf::internal::kEmptyString) {
    delete tracker_;
  }
  if (tracker_x_ != &::google::protobuf::internal::kEmptyString) {
    delete tracker_x_;
  }
  if (tracker_y_ != &::google::protobuf::internal::kEmptyString) {
    delete tracker_y_;
  }
  if (trackee_ != &::google::protobuf::internal::kEmptyString) {
    delete trackee_;
  }
  if (trackee_x_ != &::google::protobuf::internal::kEmptyString) {
    delete trackee_x_;
  }
  if (trackee_y_ != &::google::protobuf::internal::kEmptyString) {
    delete trackee_y_;
  }
  if (this != default_instance_) {
  }
}

void TrackEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrackEvent::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrackEvent_descriptor_;
}

const TrackEvent& TrackEvent::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2ftrackevent_2eproto();  return *default_instance_;
}

TrackEvent* TrackEvent::default_instance_ = NULL;

TrackEvent* TrackEvent::New() const {
  return new TrackEvent;
}

void TrackEvent::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 120;
    id_ = 0;
    if (has_tracker()) {
      if (tracker_ != &::google::protobuf::internal::kEmptyString) {
        tracker_->clear();
      }
    }
    if (has_tracker_x()) {
      if (tracker_x_ != &::google::protobuf::internal::kEmptyString) {
        tracker_x_->clear();
      }
    }
    if (has_tracker_y()) {
      if (tracker_y_ != &::google::protobuf::internal::kEmptyString) {
        tracker_y_->clear();
      }
    }
    if (has_trackee()) {
      if (trackee_ != &::google::protobuf::internal::kEmptyString) {
        trackee_->clear();
      }
    }
    if (has_trackee_x()) {
      if (trackee_x_ != &::google::protobuf::internal::kEmptyString) {
        trackee_x_->clear();
      }
    }
    if (has_trackee_y()) {
      if (trackee_y_ != &::google::protobuf::internal::kEmptyString) {
        trackee_y_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrackEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.luyun.whereareyou.shared.TrackEvent.EventType type = 1 [default = START_TRACKING_REQ];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::luyun::whereareyou::shared::TrackEvent_EventType_IsValid(value)) {
            set_type(static_cast< ::com::luyun::whereareyou::shared::TrackEvent_EventType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }
      
      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_tracker;
        break;
      }
      
      // optional string tracker = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tracker:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tracker()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tracker().data(), this->tracker().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_tracker_x;
        break;
      }
      
      // optional string tracker_x = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tracker_x:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tracker_x()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tracker_x().data(), this->tracker_x().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_tracker_y;
        break;
      }
      
      // optional string tracker_y = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tracker_y:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tracker_y()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tracker_y().data(), this->tracker_y().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_trackee;
        break;
      }
      
      // optional string trackee = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trackee:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trackee()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->trackee().data(), this->trackee().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_trackee_x;
        break;
      }
      
      // optional string trackee_x = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trackee_x:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trackee_x()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->trackee_x().data(), this->trackee_x().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_trackee_y;
        break;
      }
      
      // optional string trackee_y = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_trackee_y:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trackee_y()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->trackee_y().data(), this->trackee_y().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrackEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .com.luyun.whereareyou.shared.TrackEvent.EventType type = 1 [default = START_TRACKING_REQ];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }
  
  // optional string tracker = 3;
  if (has_tracker()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tracker().data(), this->tracker().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->tracker(), output);
  }
  
  // optional string tracker_x = 4;
  if (has_tracker_x()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tracker_x().data(), this->tracker_x().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->tracker_x(), output);
  }
  
  // optional string tracker_y = 5;
  if (has_tracker_y()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tracker_y().data(), this->tracker_y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->tracker_y(), output);
  }
  
  // optional string trackee = 6;
  if (has_trackee()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trackee().data(), this->trackee().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->trackee(), output);
  }
  
  // optional string trackee_x = 7;
  if (has_trackee_x()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trackee_x().data(), this->trackee_x().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->trackee_x(), output);
  }
  
  // optional string trackee_y = 8;
  if (has_trackee_y()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trackee_y().data(), this->trackee_y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->trackee_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrackEvent::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .com.luyun.whereareyou.shared.TrackEvent.EventType type = 1 [default = START_TRACKING_REQ];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }
  
  // optional string tracker = 3;
  if (has_tracker()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tracker().data(), this->tracker().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tracker(), target);
  }
  
  // optional string tracker_x = 4;
  if (has_tracker_x()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tracker_x().data(), this->tracker_x().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tracker_x(), target);
  }
  
  // optional string tracker_y = 5;
  if (has_tracker_y()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tracker_y().data(), this->tracker_y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->tracker_y(), target);
  }
  
  // optional string trackee = 6;
  if (has_trackee()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trackee().data(), this->trackee().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->trackee(), target);
  }
  
  // optional string trackee_x = 7;
  if (has_trackee_x()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trackee_x().data(), this->trackee_x().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->trackee_x(), target);
  }
  
  // optional string trackee_y = 8;
  if (has_trackee_y()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->trackee_y().data(), this->trackee_y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->trackee_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrackEvent::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.luyun.whereareyou.shared.TrackEvent.EventType type = 1 [default = START_TRACKING_REQ];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional string tracker = 3;
    if (has_tracker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tracker());
    }
    
    // optional string tracker_x = 4;
    if (has_tracker_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tracker_x());
    }
    
    // optional string tracker_y = 5;
    if (has_tracker_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tracker_y());
    }
    
    // optional string trackee = 6;
    if (has_trackee()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->trackee());
    }
    
    // optional string trackee_x = 7;
    if (has_trackee_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->trackee_x());
    }
    
    // optional string trackee_y = 8;
    if (has_trackee_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->trackee_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrackEvent::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrackEvent* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrackEvent*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrackEvent::MergeFrom(const TrackEvent& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_tracker()) {
      set_tracker(from.tracker());
    }
    if (from.has_tracker_x()) {
      set_tracker_x(from.tracker_x());
    }
    if (from.has_tracker_y()) {
      set_tracker_y(from.tracker_y());
    }
    if (from.has_trackee()) {
      set_trackee(from.trackee());
    }
    if (from.has_trackee_x()) {
      set_trackee_x(from.trackee_x());
    }
    if (from.has_trackee_y()) {
      set_trackee_y(from.trackee_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrackEvent::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackEvent::CopyFrom(const TrackEvent& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void TrackEvent::Swap(TrackEvent* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(id_, other->id_);
    std::swap(tracker_, other->tracker_);
    std::swap(tracker_x_, other->tracker_x_);
    std::swap(tracker_y_, other->tracker_y_);
    std::swap(trackee_, other->trackee_);
    std::swap(trackee_x_, other->trackee_x_);
    std::swap(trackee_y_, other->trackee_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrackEvent::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrackEvent_descriptor_;
  metadata.reflection = TrackEvent_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace shared
}  // namespace whereareyou
}  // namespace luyun
}  // namespace com

// @@protoc_insertion_point(global_scope)
